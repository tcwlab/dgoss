stages:
  - lint
  - build
  - test
  - release

mega-linter:
  stage: lint
  # TODO: find more specific, smaller image
  image: megalinter/megalinter:v5@sha256:463763d4a2aa0bf9e0b51663377201ead8c17a0b8e015c9a2c979099366cf868
  tags:
    - docker
    - linux
  script: ["true"] # if script: ["true"] does not work, you may try ->  script: [ "/bin/bash /entrypoint.sh" ]
  variables:
    # All available variables are described in documentation
    # https://megalinter.github.io/configuration/
    DEFAULT_WORKSPACE: $CI_PROJECT_DIR
  artifacts:
    when: always
    paths:
      - report
    expire_in: 1 week
  except:
    - main
    - tags

docker-build:
  stage: build
  # Use the official docker image.
  image: docker:latest@sha256:a293bf8de927f0b6f5425408a0172c9c2896b14e2be86d40a9d10eaaf0025b11
  tags:
    - docker
    - linux
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - echo "Running on branch $CI_COMMIT_BRANCH with tag = $CI_COMMIT_SHORT_SHA"
    - docker build --no-cache -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - echo "Pushing image '$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA' to gitlab registry"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  except:
    - main
    - tags

validate-image:
  stage: test
  image: tcwlab/dgoss:latest@sha256:5c9a8e1c5676dfff86084bab739c6fdc61a73784a4c1d3422941367c9cedcb82
  tags:
    - docker
    - linux
  variables:
    GOSS_FILES_PATH: goss
    GOSS_FILES_STRATEGY: cp
  script:
    - dgoss run -it $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  except:
    - main
    - tags

semantic-release:
  stage: release
  image: tcwlab/semantic-release:latest@sha256:d8d3a1841aa57a928bf20df30d5f075bcb91310ccacdaa765896995a3e1cefec
  tags:
    - docker
    - linux
  script:
    - semantic-release
  only:
    refs:
      - main
  except:
    - tags
